{"version":3,"sources":["reducers/reducers.js","reducers/index.js","actions/actionTypes.js","store/store.js","components/Box.tsx","components/single/Card.tsx","components/card-grid/CardGrid.tsx","components/Home.tsx","components/buttons/views/Button.tsx","components/buttons/theme/default-theme.ts","App.tsx","actions/actions.js","serviceWorker.ts","index.tsx"],"names":["initialState","siteName","items","rootReducer","combineReducers","state","action","type","Object","assign","id","item","name","details","imageUrl","presentationLink","codeLink","filter","itemId","store","createStore","BoxWrapper","styled","div","Box","props","boxClassNames","classnames","className","to","CardWrapper","Card","cardClassNames","CardGridWrapper","CARD_NUMBERS","CardGrid","cardGridClassNames","Grid","container","spacing","map","card","index","xs","sm","HomeWrapper","Home","buttonSizeClass","size","Btn","button","attrs","isDisabled","hasShadow","isFullWidth","colorTheme","Button","console","info","children","isTitleReversed","reversedChild","split","reverse","join","getState","dispatch","log","App","onHandleClick","onClick","src","alt","path","exact","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4b8ad1f.chunk.js","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  siteName: 'Presentation Site',\n  items: []\n};\n\nexport const items = (state = initialState, action) => {\n  switch(action.type) {\n    case actionTypes.CHANGE_SITE_NAME:\n      return Object.assign({}, state, {\n        siteName: action.siteName\n      });\n\n    case actionTypes.ADD_ITEM:\n      return Object.assign({}, state, {\n        items: [\n          ...state.items,\n          {\n            id: action.item.id,\n            name: action.item.name,\n            details: action.item.details,\n            imageUrl: action.item.imageUrl,\n            presentationLink: action.item.presentationLink,\n            codeLink: action.item.codeLink\n          }\n        ]\n      });\n    \n    case actionTypes.REMOVE_ITEM_BY_ID:\n      return Object.assign({}, state, {\n        items: [...state.items.filter(item => item.action === action.itemId)]\n      });\n\n    default:\n      return state;\n  }\n}\n\n","import { items } from './reducers';\nimport { combineReducers } from 'redux';\n\nexport const rootReducer = combineReducers({\n  items,\n})","export const ADD_ITEM = 'ADD_ITEM';\nexport const REMOVE_ITEM_BY_ID = 'REMOVE_ITEM_BY_ID';\nexport const CHANGE_SITE_NAME = 'CHANGE_SITE_NAME';","import { createStore } from 'redux';\nimport { rootReducer } from '../reducers';\n\nexport const store = createStore(rootReducer);\n","import * as React from 'react';\n// import classnames from 'classnames';\nimport { default as classnames } from 'classnames';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport interface IBox {\n  className?: string;\n}\n\nconst BoxWrapper = styled.div`\n  border: 1px black solid;\n`;\n\nexport const Box: React.FC<IBox> = (props: IBox) => {\n  const boxClassNames = classnames(props.className, 'js-box');\n  \n  return (\n    <BoxWrapper className = {boxClassNames}>\n      <div>Box</div>\n\n      <Link to='/'>Home</Link>\n    </BoxWrapper>\n  );\n}","import * as React from 'react';\n// import classnames from 'classnames';\nimport { default as classnames } from 'classnames';\nimport styled from 'styled-components';\n// import { Link } from 'react-router-dom';\n\nexport interface ICard {\n  className?: string;\n}\n\nconst CardWrapper = styled.div`\n  border: 1px black solid;\n  background-color: light-grey;\n  height: 500px;\n  width: 100%;\n`;\n\nexport const Card: React.FC<ICard> = (props: ICard) => {\n  const cardClassNames = classnames(props.className, 'js-card');\n  \n  return (\n    <CardWrapper className = {cardClassNames}>\n      <div>Card</div>\n    </CardWrapper>\n  );\n}","import * as React from 'react';\n// import classnames from 'classnames';\nimport { default as classnames } from 'classnames';\nimport styled from 'styled-components';\nimport { Card } from '../single/Card';\nimport Grid from '@material-ui/core/Grid';\n\nexport interface ICardGrid {\n  className?: string;\n}\n\nconst CardGridWrapper = styled.div`\n\n`;\n\nconst CARD_NUMBERS = ['1', '2', '3', '4'];\n\nexport const CardGrid: React.FC<ICardGrid> = (props: ICardGrid) => {\n  const cardGridClassNames = classnames(props.className, 'js-card-grid');\n  \n  return (\n    <CardGridWrapper className = {cardGridClassNames}>\n      <Grid container spacing={1}>\n        {\n          CARD_NUMBERS.map((card, index) => (\n              <Grid item xs={3} sm={6}>\n                <Card />\n              </Grid>\n          ))\n        }\n      </Grid>\n    </CardGridWrapper>\n  );\n}","import * as React from 'react';\n// import classnames from 'classnames';\nimport { default as classnames } from 'classnames';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport { CardGrid } from './card-grid/CardGrid';\n\nexport interface IHome {\n  className?: string;\n}\n\nconst HomeWrapper = styled.div`\n  border: 1px black solid;\n`;\n\nexport const Home: React.FC<IHome> = (props: IHome) => {\n  const boxClassNames = classnames(props.className, 'js-box');\n  \n  return (\n    <HomeWrapper className = {boxClassNames}>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/box/\">Box</Link>\n        </li>\n      </ul>\n      <CardGrid />\n    </HomeWrapper>\n  );\n}","import React from 'react';\nimport { \n  buttonTheme, \n  hoverRemovedTheme,\n  buttonDefaultTheme,\n  redTheme,\n  blueTheme,\n  greenTheme,\n  blackTheme\n} from '../theme/default-theme';\nimport { default as classnames } from 'classnames';\nimport styled from 'styled-components';\n\nexport type ButtonSize = 'sm' | 'md' | 'lg' | string;\nexport type ColorTheme = 'red' | 'blue' | 'green' | 'black';\n\nexport interface IButton extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  size?: ButtonSize;\n  className?: string;\n  isDisabled?: boolean;\n  isTitleReversed?: boolean;\n  isFullWidth?: boolean;\n  hasShadow?: boolean;\n  colorTheme?: ColorTheme;\n}\n\nconst buttonSizeClass = (size: string | undefined) => {\n  return size ? `button--${size}` : '';\n}\n\nconst buttonClassNames = (props: IButton) => {\n  return classnames([\n    'button',\n    'js-button',\n    [buttonSizeClass(props.size)]\n  ]);\n}\n\nconst Btn = styled.button.attrs({\n  className: buttonClassNames\n})`\n  ${buttonTheme};\n  ${buttonDefaultTheme};\n\n  &.${buttonSizeClass('sm')} {\n    padding: 4px 8px;\n    font-size: .9rem;\n  };\n\n  ${(props: IButton) => props.size === 'md' &&\n    `\n    padding: 10px 20px;\n    font-size: 1rem;\n    `\n  };\n  \n  ${(props: IButton) => props.size === 'lg' &&\n    `\n    padding: 16px 32px;\n    font-size: 1.1rem;\n    `\n  } ;\n\n  ${(props: IButton) => props.isDisabled &&\n    `\n    ${hoverRemovedTheme}\n    `\n  };\n\n  ${(props: IButton) => props.hasShadow &&\n    `\n    &:hover {\n      box-shadow: 2px 2px 7px #888888;\n    }\n    `\n  };\n\n  ${(props: IButton) => props.isFullWidth ? `\n    display: block;\n    width: 100%;\n  ` : ''};\n\n  ${(props: IButton) => props.colorTheme === 'red' &&\n    `\n    ${redTheme}\n    `\n  };\n\n  ${(props: IButton) => props.colorTheme === 'blue' &&\n    `\n    ${blueTheme}\n    `\n  };\n\n  ${(props: IButton) => props.colorTheme === 'green' &&\n    `\n    ${greenTheme}\n    `\n  };\n\n  ${(props: IButton) => props.colorTheme === 'black' &&\n    `\n    ${blackTheme}\n    `\n  };\n`;\n\nexport const Button: React.FC<IButton> = (props: IButton) => {\n  console.info(typeof (props.children));\n  \n  if (typeof (props.children) === 'string' && props.isTitleReversed) {\n    const reversedChild = props.children && props.children.split('').reverse().join(' ');\n    return (\n      <Btn {...props}>{reversedChild}</Btn>\n    )\n  }\n  return <Btn {...props}>{props.children}</Btn>\n}","// tslint:disabled\n\nexport const buttonTheme = `\n  cursor: pointer;\n  border: none;\n  outline: none;\n  background-color: #4CAF50;\n  border-color: #4CAF50;\n  color: #000000;\n  &:hover {\n    color: #ffffff;\n  }\n  font-family: Verdana, sans-serif;\n  letter-spacing: 1.1px;\n  `;\n  \n  export const buttonDefaultTheme = `\n    padding: 10px 20px;\n    font-size: 1rem;\n  `;\n\nexport const hoverRemovedTheme = `\n  cursor: default;\n  &:hover {\n    box-shadow: none;\n    // color: #d3d3d3;\n  }\n  &:disabled {\n    cursor: not-allowed;\n  }\n`;\n\nexport const redTheme = `\n  background-color: #ff0000;\n  color: #ffffff;\n  &:hover {\n    background-color: #cc0000;\n  }\n`;\n\nexport const blueTheme = `\n  background-color: #0000ff;\n  color: #ffffff;\n  &:hover {\n    background-color: #0066ff;\n  }\n`;\n\nexport const greenTheme = `\n  background-color: #4CAF50;\n  color: #000000;\n  &:hover {\n    color: #ffffff;\n  }\n`;\n\nexport const blackTheme = `\n  background-color: #000000;\n  color: #ffffff;\n  &:hover {\n    background-color: #333333;\n  }\n`;\n","import React from \"react\";\nimport \"./App.css\";\nimport { store } from \"./store/store\";\nimport { addItem, removeItemById, changeSiteName } from \"./actions/actions\";\nimport { Route, Link } from 'react-router-dom';\nimport { Box } from './components/Box';\nimport { Home } from './components/Home';\n\nimport { Button } from './components/buttons';\n \nconst item = {\n  id: 1,\n  name: \"Presentation Site\",\n  details: \"Presentation site\",\n  imageUrl: \"https://google.com\",\n  presentationLink: \"https://google.com\",\n  codeLink: \"https://google.com\"\n};\n\nconsole.info('initial store', store.getState());\n\nstore.dispatch(addItem(item));\n\nconsole.info('added in store', store.getState());\n\nstore.dispatch(removeItemById(1));\n\nconsole.info('removed from store', store.getState());\n\nstore.dispatch(changeSiteName('New Site Name'));\n\nconsole.log('change site name', store.getState());\n\nconst App: React.FC = () => {\n  const onHandleClick = () => console.log('Button clicked!');\n\n  return (\n    <div className=\"App\">\n      <Button size='sm' onClick={onHandleClick} isFullWidth isDisabled> Small button</Button>\n      <Button size='sm' onClick={onHandleClick}> Small button</Button><br />\n      <Button size='md' isDisabled> Medium button</Button><br />\n      <Button size='lg'> Large button</Button><br />\n      <Button > Default button</Button><br />\n      <Button hasShadow> Default button</Button><br />\n\n      <Button colorTheme='red'> Default button</Button>\n      <Button colorTheme='blue'> Default button</Button>\n      <Button colorTheme='green'> Default button</Button>\n      <Button colorTheme='black'> Default button</Button>\n\n\n      <img src=\"icon-menu-alt.svg\" alt=\"svg\" />\n\n      <Route path='/' exact component={Home} />\n      <Route path='/box' render={(props) => <Box className=\"new-class\" />} />\n    </div>\n  );\n};\n\nexport default App;\n","import * as actionTypes from './actionTypes';\n\nexport const changeSiteName = siteName => ({\n  type: actionTypes.CHANGE_SITE_NAME,\n  siteName\n});\n\nexport const addItem = item => ({\n  type: actionTypes.ADD_ITEM,\n  item\n});\n\nexport const removeItemById = itemId => ({\n  type: actionTypes.REMOVE_ITEM_BY_ID,\n  itemId\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>  \n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}